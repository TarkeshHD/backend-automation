name: Backend Docker Build and EKS Deploy

on:
  workflow_dispatch:
    inputs:
      eks_cluster_name:
        description: 'EKS Cluster Name'
        required: true
        type: string

env:
  IMAGE_NAME: backend
  DOCKERFILE_PATH: ./vrse-builder-backend-main/Dockerfile
  CONTEXT_PATH: ./vrse-builder-backend-main

jobs:
  backend-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      # âœ… Docker Hub login
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      # âœ… Build and Push Docker image
      - name: Build and Push Backend Image
        run: |
          TAG="${GITHUB_SHA::7}"
          echo "Building image: ${{ secrets.DOCKERHUB_USERNAME }}/$IMAGE_NAME:$TAG"

          docker build -f $DOCKERFILE_PATH -t ${{ secrets.DOCKERHUB_USERNAME }}/$IMAGE_NAME:$TAG $CONTEXT_PATH
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/$IMAGE_NAME:$TAG

      # âœ… Install kubectl and eksctl
      - name: Install tools
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl

          curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp
          sudo mv /tmp/eksctl /usr/local/bin

      # âœ… Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # âœ… Check or create EKS cluster
      - name: Check or create EKS cluster
        run: |
          CLUSTER_NAME="${{ github.event.inputs.eks_cluster_name }}"
          REGION="${{ secrets.AWS_REGION }}"

          echo "Checking if cluster $CLUSTER_NAME exists..."
          if aws eks describe-cluster --name "$CLUSTER_NAME" --region "$REGION" >/dev/null 2>&1; then
            echo "âœ… Cluster $CLUSTER_NAME already exists."
          else
            echo "ðŸš€ Creating EKS cluster $CLUSTER_NAME..."
            eksctl create cluster \
              --name "$CLUSTER_NAME" \
              --region "$REGION" \
              --nodegroup-name standard-workers \
              --node-type t3.medium \
              --nodes 2 \
              --nodes-min 1 \
              --nodes-max 3 \
              --managed
          fi

      # âœ… Generate kubeconfig for EKS
      - name: Generate kubeconfig
        run: |
          aws eks update-kubeconfig \
            --name ${{ github.event.inputs.eks_cluster_name }} \
            --region ${{ secrets.AWS_REGION }}

      # âœ… Deploy to EKS
      - name: Deploy Backend
        run: |
          IMAGE_NAME="${{ secrets.DOCKERHUB_USERNAME }}/backend"
          TAG="${GITHUB_SHA::7}"
          echo "Deploying image: $IMAGE_NAME:$TAG"

          sed -i "s|image: .*|image: $IMAGE_NAME:$TAG|" backend-deployment.yaml
          kubectl apply -f backend-deployment.yaml
          kubectl apply -f backend-service.yaml

      # âœ… Verify rollout
      - name: Verify Deployment
        run: |
          kubectl rollout status deployment/backend-deployment
