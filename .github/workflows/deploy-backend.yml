name: Deploy Backend to EKS

on:
  workflow_dispatch:

jobs:
  deploy-backend:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: docker/setup-buildx-action@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Create ECR Repository if not exists
        run: |
          REPO_NAME="backend"
          if ! aws ecr describe-repositories --repository-names $REPO_NAME >/dev/null 2>&1; then
            aws ecr create-repository --repository-name $REPO_NAME
          fi

      - name: Build and Push Backend Docker image
        run: |
          BACKEND_IMAGE="${{ steps.login-ecr.outputs.registry }}/backend"
          TAG="${GITHUB_SHA::7}"
          echo "Building backend image: $BACKEND_IMAGE:$TAG"

          docker build -f vrse-builder-backend-main/Dockerfile \
            -t "$BACKEND_IMAGE:$TAG" \
            -t "$BACKEND_IMAGE:latest" \
            ./vrse-builder-backend-main
          docker push "$BACKEND_IMAGE:$TAG"
          docker push "$BACKEND_IMAGE:latest"

      - name: Install tools
        run: |
          curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp
          sudo mv /tmp/eksctl /usr/local/bin
          curl -LO "https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/

      - name: Ensure EKS Cluster
        run: |
          CLUSTER_NAME="${{ secrets.EKS_CLUSTER_NAME }}"
          REGION="${{ secrets.AWS_REGION }}"
          if ! aws eks describe-cluster --name "$CLUSTER_NAME" --region "$REGION" >/dev/null 2>&1; then
            eksctl create cluster \
              --name "$CLUSTER_NAME" \
              --region "$REGION" \
              --nodegroup-name standard-workers \
              --node-type t3.medium \
              --nodes 2 \
              --nodes-min 1 \
              --nodes-max 3 \
              --managed
          fi

      - name: Generate kubeconfig
        run: |
          aws eks update-kubeconfig \
            --name ${{ secrets.EKS_CLUSTER_NAME }} \
            --region ${{ secrets.AWS_REGION }}

      - name: Deploy Backend Deployment
        run: |
          BACKEND_IMAGE="${{ steps.login-ecr.outputs.registry }}/backend"
          TAG="${GITHUB_SHA::7}"

          echo "Updating backend image in deployment..."
          sed -i "/name: backend-container/{n;s|image:.*|image: $BACKEND_IMAGE:$TAG|}" \
            vrse-builder-backend-main/backend-deployment.yaml

          echo "Applying backend deployment..."
          kubectl apply -f vrse-builder-backend-main/backend-deployment.yaml

      - name: Deploy Backend Service
        run: |
          echo "Applying backend service..."
          kubectl apply -f vrse-builder-backend-main/backend-service.yaml

      - name: Verify Backend Deployment
        run: |
          kubectl rollout status deployment/backend-deployment
