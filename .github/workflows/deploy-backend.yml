name: Deploy Backend to AWS EKS

on:
  push:
    branches:
      - main

env:
  AWS_REGION: us-east-1
  IMAGE_NAME: backend
  DEPLOYMENT_FILE: backend-deployment.yaml
  SERVICE_FILE: backend-service.yaml

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # ✅ Checkout code
      - name: Checkout Repository
        uses: actions/checkout@v3

      # ✅ Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # ✅ Install kubectl & eksctl
      - name: Install tools
        run: |
          sudo curl --silent --location \
            "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" \
            | tar xz -C /tmp
          sudo mv /tmp/eksctl /usr/local/bin

          curl -LO "https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/

      # ✅ Authenticate Docker to ECR
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      # ✅ Ensure ECR repository exists
      - name: Create ECR repository if not exists
        run: |
          aws ecr describe-repositories --repository-names $IMAGE_NAME || \
          aws ecr create-repository --repository-name $IMAGE_NAME
          echo "✅ ECR repository ready."

      # ✅ Build and Push Docker image
      - name: Build and Push Docker Image
        run: |
          ECR_IMAGE="${{ steps.login-ecr.outputs.registry }}/${IMAGE_NAME}:${GITHUB_SHA::7}"
          echo "ECR_IMAGE=$ECR_IMAGE" >> $GITHUB_ENV
          docker build -f ./vrse-builder-backend-main/Dockerfile \
            -t $ECR_IMAGE ./vrse-builder-backend-main
          docker push $ECR_IMAGE

      # ✅ Update kubeconfig for existing cluster
      - name: Update kubeconfig
        run: |
          aws eks update-kubeconfig \
            --name Backend-deploy-1234 \
            --region $AWS_REGION

      # ✅ Deploy backend to EKS
      - name: Deploy to EKS
        run: |
          sed -i "s|image: .*|image: $ECR_IMAGE|" $DEPLOYMENT_FILE
          kubectl apply -f $DEPLOYMENT_FILE
          kubectl apply -f $SERVICE_FILE

      # ✅ Verify deployment
      - name: Verify Rollout
        run: |
          kubectl rollout status deployment/backend-deployment
