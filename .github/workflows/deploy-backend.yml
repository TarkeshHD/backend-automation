name: Deploy Backend to EKS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: us-east-1
      CLUSTER_NAME: Backend-cluster
      CERT_MANAGER_VERSION: v1.14.4

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Update kubeconfig
        run: aws eks update-kubeconfig --name $CLUSTER_NAME --region $AWS_REGION

      - name: Wait for DNS propagation
        run: |
          echo "Waiting for DNS to propagate..."
          sleep 120

      - name: Install cert-manager
        run: |
          if ! kubectl get ns cert-manager >/dev/null 2>&1; then
            echo "Installing cert-manager..."
            kubectl apply -f https://github.com/cert-manager/cert-manager/releases/download/${CERT_MANAGER_VERSION}/cert-manager.yaml
            echo "Waiting for cert-manager pods to be ready..."
            kubectl rollout status deployment/cert-manager -n cert-manager --timeout=180s
            kubectl rollout status deployment/cert-manager-webhook -n cert-manager --timeout=180s
          else
            echo "cert-manager already installed"
          fi

      - name: Apply Kubernetes manifests
        run: |
          kubectl apply -f backend-deployment.yaml
          kubectl apply -f backend-service.yaml
          kubectl apply -f backend-ingress.yaml

      - name: Wait for backend deployment rollout
        run: |
          echo "⏳ Waiting for backend deployment rollout..."
          kubectl rollout status deployment/backend-deployment --timeout=300s
          echo "✅ Backend deployment is ready"

      - name: Wait for certificate to be ready
        run: |
          echo "Waiting for TLS certificate to be issued..."
          for i in {1..30}; do
            if kubectl get certificate backend-cert -o jsonpath='{.status.conditions[?(@.type=="Ready")].status}' | grep True; then
              echo "✅ Certificate is ready"
              break
            fi
            echo "⏳ Certificate not ready yet, waiting..."
            sleep 20
          done

      - name: Get Backend URL
        run: |
          INGRESS_HOST=$(kubectl get ingress backend-ingress -o jsonpath='{.status.loadBalancer.ingress[0].hostname}')
          echo "Backend URL: https://${INGRESS_HOST}"
          echo "BACKEND_URL=https://${INGRESS_HOST}" >> $GITHUB_ENV
