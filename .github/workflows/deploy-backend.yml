name: 🚀 Backend Deploy to EKS

on:
  push:
    branches: [main]

env:
  AWS_REGION: us-east-1
  CLUSTER_NAME: Backend-cluster
  BACKEND_NAME: backend
  BACKEND_DIR: vrse-builder-backend-main
  DOMAIN_NAME: poc-api.autovrse.app
  IMAGE: <your-aws-account-id>.dkr.ecr.us-east-1.amazonaws.com/backend:<your-tag>

jobs:
  deploy:
    name: 🌐 Deploy Backend to EKS
    runs-on: ubuntu-latest

    steps:
    - name: 📥 Checkout repo
      uses: actions/checkout@v3

    - name: ☁️ Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: ☸️ Update kubeconfig
      run: aws eks update-kubeconfig --region $AWS_REGION --name $CLUSTER_NAME

    - name: 🔄 Clean old ingress-nginx (if conflicting)
      run: |
        if kubectl get ns ingress-nginx; then
          echo "⚠️ Deleting existing ingress-nginx namespace to fix Helm conflicts"
          kubectl delete ns ingress-nginx --ignore-not-found
          sleep 20
        fi

    - name: ☁️ Install ingress-nginx via Helm
      run: |
        helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx
        helm repo update
        helm upgrade --install ingress-nginx ingress-nginx/ingress-nginx \
          --namespace ingress-nginx --create-namespace

    - name: 📩 Install cert-manager
      run: |
        kubectl apply -f https://github.com/cert-manager/cert-manager/releases/latest/download/cert-manager.yaml
        echo "✅ Waiting for cert-manager to be ready..."
        kubectl wait --namespace cert-manager --for=condition=Available --timeout=120s deployment/cert-manager

    - name: 🧾 Create ClusterIssuer
      run: |
        cat <<EOF | kubectl apply -f -
        apiVersion: cert-manager.io/v1
        kind: ClusterIssuer
        metadata:
          name: letsencrypt-prod
        spec:
          acme:
            server: https://acme-v02.api.letsencrypt.org/directory
            email: your-email@example.com
            privateKeySecretRef:
              name: letsencrypt-prod
            solvers:
            - http01:
                ingress:
                  class: nginx
        EOF

    - name: 🚢 Deploy Backend App
      run: |
        kubectl apply -f $BACKEND_DIR/k8s-deployment.yaml

    - name: 🌐 Deploy Ingress for backend
      run: |
        cat <<EOF | kubectl apply -f -
        apiVersion: networking.k8s.io/v1
        kind: Ingress
        metadata:
          name: backend-ingress
          namespace: default
          annotations:
            kubernetes.io/ingress.class: "nginx"
            cert-manager.io/cluster-issuer: "letsencrypt-prod"
        spec:
          tls:
          - hosts:
            - ${DOMAIN_NAME}
            secretName: backend-tls
          rules:
          - host: ${DOMAIN_NAME}
            http:
              paths:
              - path: /
                pathType: Prefix
                backend:
                  service:
                    name: ${BACKEND_NAME}
                    port:
                      number: 80
        EOF
