name: Deploy Backend to EKS

on:
  workflow_dispatch:

jobs:
  deploy-backend:
    runs-on: ubuntu-latest

    steps:
      # ✅ Checkout repo
      - uses: actions/checkout@v3

      # ✅ Setup Docker Buildx
      - uses: docker/setup-buildx-action@v2

      # ✅ Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # ✅ Login to Amazon ECR
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      # ✅ Auto-create ECR repo if not exists
      - name: Create ECR Repository if not exists
        run: |
          REPO_NAME="backend"
          if ! aws ecr describe-repositories --repository-names $REPO_NAME >/dev/null 2>&1; then
            echo "Creating ECR repository: $REPO_NAME"
            aws ecr create-repository --repository-name $REPO_NAME
          else
            echo "ECR repository $REPO_NAME already exists."
          fi

      # ✅ Build and push backend image to ECR
      - name: Build and Push Backend Docker image
        run: |
          BACKEND_IMAGE="${{ steps.login-ecr.outputs.registry }}/backend"
          TAG="${GITHUB_SHA::7}"
          echo "Building backend image: $BACKEND_IMAGE:$TAG"

          docker build -f vrse-builder-backend-main/Dockerfile \
            -t "$BACKEND_IMAGE:$TAG" \
            -t "$BACKEND_IMAGE:latest" \
            ./vrse-builder-backend-main
          docker push "$BACKEND_IMAGE:$TAG"
          docker push "$BACKEND_IMAGE:latest"

      # ✅ Install kubectl
      - name: Install kubectl
        run: |
          curl -LO "https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/

      # ✅ Connect to existing EKS cluster
      - name: Generate kubeconfig
        run: |
          aws eks update-kubeconfig \
            --name ${{ secrets.EKS_CLUSTER_NAME }} \
            --region ${{ secrets.AWS_REGION }}

      # ✅ Deploy Backend
      - name: Deploy Backend
        run: |
          BACKEND_IMAGE="${{ steps.login-ecr.outputs.registry }}/backend"
          TAG="${GITHUB_SHA::7}"
          echo "Deploying backend: $BACKEND_IMAGE:$TAG"

          sed -i "s|image: .*|image: $BACKEND_IMAGE:$TAG|" k8s/backend-deployment.yaml
          kubectl apply -f k8s/backend-deployment.yaml
          kubectl apply -f k8s/backend-service.yaml

      # ✅ Verify rollout
      - name: Verify Deployment
        run: |
          kubectl rollout status deployment/backend-deployment
